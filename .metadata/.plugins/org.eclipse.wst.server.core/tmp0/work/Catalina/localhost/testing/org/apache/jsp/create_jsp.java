/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2016-05-10 04:51:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class create_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Petition class</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form action =\"petitionclasssubmit.jsp\" method = \"post\">\r\n");
      out.write("<img src =\"Images/ust.JPG\" alt = \"Missing Image!=\" width = 1333 height= ><br>\r\n");
      out.write("<form><input type=\"submit\" name=\"one\" value=\"Schedule\"/>\r\n");
      out.write("\t<input type=\"submit\" name=\"two\"\r\n");
      out.write("\t\t\tvalue=\"Create A Petition Class\" >\r\n");
      out.write("<input type=\"submit\"  name=\"three\"value=\"Log out\"></form>\r\n");
 if (request.getParameter("one") != null) {
    response.sendRedirect("home.jsp");
}
else if (request.getParameter("two") != null) {
    response.sendRedirect("create.jsp");
}
else if (request.getParameter("three") != null) {
    response.sendRedirect("index.jsp");
} 
else if (request.getParameter("four") != null) {
    response.sendRedirect("petitionclasssubmit.jsp");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<center><p>You are in the 'Create A Petition Class' menu.</p></center></br>\r\n");
      out.write("<center><p>Semester: <input type=\"text\" name=\"sem\"/></p></center>\r\n");
      out.write("<center><p>College: <input type=\"text\" name=\"college\"/></p></center>\r\n");
      out.write("<center><p>Subject Name: <input type=\"text\" name=\"subname\"/></p></center>\r\n");
      out.write("<center><p>Number of Units: <input type=\"text\" name=\"units\"/></p></center>\r\n");
      out.write("<center><p>Proposed Schedule: <input type=\"text\" name=\"propsched\"/></p></center>\r\n");
      out.write("<center><p>Time: <input type=\"text\" name=\"time\"/></p></center>\r\n");
      out.write("<center><p>Professor: <input type=\"text\" name=\"prof\"/></p></center>\r\n");
      out.write("<center><form><input type=\"submit\" name=\"four\" value=\"Submit\"/></center></form>\r\n");
      out.write("<p>*Once approved, Petition Subject will appear in 'Available Petition Subjects.</p>\r\n");
      out.write("<p>*It will be removed from the 'Available Petition Subjects' when slots are no longer available.</p><br><br>\r\n");
      out.write("<style>\r\n");
      out.write("h1 {\r\n");
      out.write("\tfont-family: consolas;\r\n");
      out.write("\tfont-size: 300%;\r\n");
      out.write("\tcolor: blue;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h2 {\r\n");
      out.write("\tfont-family: calibri;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"submit\"] {\r\n");
      out.write("\tbackground: #87CEFA;\r\n");
      out.write("\tborder: 1px double #DDD;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("\tbox-shadow: 0 0 5px #333;\r\n");
      out.write("\tcolor:;\r\n");
      out.write("\toutline: none;\r\n");
      out.write("\theight: 25px;\r\n");
      out.write("\twidth: 441px;\r\n");
      out.write("\tfont-family: \"verdana\";\r\n");
      out.write("\tfont-color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p {\r\n");
      out.write("\tfont-family: \"verdana\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"text\"] {\r\n");
      out.write("\tbackground: white;\r\n");
      out.write("\tborder: 1px double black;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("\tbox-shadow: 0 0 5px yellow;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\toutline: center;\r\n");
      out.write("\theight: 25px;\r\n");
      out.write("\twidth: 275px;\r\n");
      out.write("\tfont-family: \"verdana\";\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
